import { Component } from 'react';
import * as React from 'react';
import { object } from 'prop-types';
import * as PropTypes from 'prop-types';

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = Object.setPrototypeOf ||
    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var Effect = (function (_super) {
    __extends(Effect, _super);
    function Effect() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Effect.prototype.componentWillReceiveProps = function (_nextProps, nextContext) {
        var _a = this.context.formik, values = _a.values, touched = _a.touched, errors = _a.errors, isSubmitting = _a.isSubmitting;
        var _b = nextContext.formik, nextValues = _b.values, nextTouched = _b.touched, nextErrors = _b.errors, nextIsSubmitting = _b.isSubmitting;
        if (nextContext.formik !== this.context.formik) {
            this.props.onChange({
                values: values,
                touched: touched,
                errors: errors,
                isSubmitting: isSubmitting,
            }, {
                values: nextValues,
                touched: nextTouched,
                errors: nextErrors,
                isSubmitting: nextIsSubmitting,
            });
        }
    };
    Effect.prototype.render = function () {
        return null;
    };
    Effect.contextTypes = {
        formik: object,
    };
    return Effect;
}(Component));

export { Effect };
//# sourceMappingURL=formik-effect.es6.js.map
